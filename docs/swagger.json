{
    "swagger": "2.0",
    "info": {
        "description": "This is simple CRUD API with JWT Auth.",
        "title": "GIN CRUD AND AUTH API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8083",
    "basePath": "/api/v1",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "User Login",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseFailure"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseFailure"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout User",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseLogoutSuccess"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseLogoutUnAuthorizedFailure"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponseLogoutInternalServerFailure"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get Users",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.UserResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SuccessResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FailureResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "Create New User",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.NewUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/model.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/model.FailureResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Data": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "model.FailureResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "default": "error"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "model.NewUser": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                }
            }
        },
        "model.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "model.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 5
                }
            }
        },
        "model.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserResponseFailure": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "model.UserResponseLogoutInternalServerFailure": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "default": "Internal Server Error"
                },
                "status": {
                    "type": "string",
                    "default": "error"
                },
                "status_code": {
                    "type": "integer",
                    "default": 500
                }
            }
        },
        "model.UserResponseLogoutSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "default": "Logged out successfully"
                },
                "status": {
                    "type": "string",
                    "default": "success"
                },
                "status_code": {
                    "type": "integer",
                    "default": 200
                }
            }
        },
        "model.UserResponseLogoutUnAuthorizedFailure": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "default": "Authorization header is required"
                },
                "status": {
                    "type": "string",
                    "default": "error"
                },
                "status_code": {
                    "type": "integer",
                    "default": 400
                }
            }
        },
        "model.UserResponseSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Data"
                },
                "status": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "\"Enter your bearer token in the format 'Bearer {token}'\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}